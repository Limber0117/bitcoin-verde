package com.softwareverde.bitcoin.wallet;

import com.softwareverde.bitcoin.address.AddressInflater;
import com.softwareverde.bitcoin.secp256k1.key.PrivateKey;
import com.softwareverde.bitcoin.transaction.Transaction;
import com.softwareverde.bitcoin.transaction.TransactionInflater;
import com.softwareverde.constable.list.mutable.MutableList;
import com.softwareverde.util.HexUtil;
import org.junit.Assert;
import org.junit.Test;

public class WalletTests {
    @Test
    public void should_sign_first_bitcoin_verde_transaction() {
        // Setup
        final AddressInflater addressInflater = new AddressInflater();
        final TransactionInflater transactionInflater = new TransactionInflater();
        final Transaction loadWalletTransaction0 = transactionInflater.fromBytes(HexUtil.hexStringToByteArray("0100000001DA69DE04948123F17F1CC0CF695C69A19F5D76AFFAC49E82BA3CD443289485B1000000006A473044022035ED503A1850C0E9DC7D14F3D1E106490B1E5FE62407931A2593E5EA5A9EEBCD0220556A7ED53B57300A0E6F0340649176274FF93965CBC66B44D4C8E6C9BCDA90FE412103FF15C531BCFBA5395C43FFB63E610B9509487DF90631595736C650C092076EC1FFFFFFFF02E7AF0C00000000001976A914008BB4D9A19DE9D31C93E191917663E40D45082388ACA6E58B00000000001976A914C780D70CE11F4CAFDC155F95F1B65188AE20D8C288AC00000000"));
        final Transaction loadWalletTransaction1 = transactionInflater.fromBytes(HexUtil.hexStringToByteArray("010000000115840A9A95CD4A494A88B9D51D9B6A41DCEE646496AD68B94AB15654715035CB010000006B483045022100A83494B279DCA11717BCEC554B0ACFCC1D58B5F4A90236666CBFD8968DA8ADFC022019B60E4AF2E85B80DFF463920F13992E6311F682EFDFD3BDAC39DE2B722453EB41210335960D70AD4FF7E1845ACFF5E8B01937BD64141D706DB8AE4BFBE734959B2EE8FFFFFFFF0357040000000000001976A914008BB4D9A19DE9D31C93E191917663E40D45082388AC2C840000000000001976A91425F184D924A8DE349CFA556EE121443C3D2FB02688AC00000000000000007F6A076D656D6F7061794C7420436C61696D20757020746F20302E30303120667265652042434820666F7220796F75722031737420626574206F6E20424954434F494E20434153482047414D45532068747470733A2F2F7777772E6D656D6F7061792E78797A2F67615F6361736867616D65732E626974636F696E2E636F6D2000000000"));

        final Wallet wallet = new Wallet();
        wallet.setSatoshisPerByteFee(1.5D);
        wallet.addPrivateKey(PrivateKey.fromHexString("FE1A361C9B70322E6797C1582B63327FDCB74808E16BCF319987BEE217CC37D4"));
        wallet.addTransaction(loadWalletTransaction0);
        wallet.addTransaction(loadWalletTransaction1);

        final MutableList<PaymentAmount> paymentAmounts = new MutableList<PaymentAmount>();
        paymentAmounts.add(new PaymentAmount(addressInflater.fromBase58Check("1PDBPJW7Ji7wgwQcbKFtqboDzHmyFoyLxq"), 831900L));

        // Action
        final Transaction signedTransaction = wallet.createTransaction(paymentAmounts);

        // Assert
        Assert.assertNotNull(signedTransaction);
    }

    @Test
    public void foo() {
        final String[] transactionHexStrings = new String[] {
            "0100000001CC6C5600A0927CD5395CD12B0D665A3715EDA91EA3E968ABE729AB8A11D7839D000000006B483045022100E5C9AF0D647DD90251BE09BEE5B79F0F2756C55E00C6C94545656C91321C95FA02205224BF9265400E706FE1422A755FBD243062A15F2C953BBAFE7C2D978222C50D4121029602CA68608F9AB02DC2DA445C97F2D3980F75A5C620742C309BDD8B7E5A5B64FFFFFFFF0139B20C00000000001976A914B3BE4593503F84E2BE61EB33670B31CC7F4FC0AE88AC00000000",
            "010000000186545EEFE698D40FA669CB368AFDA14925A67DF0423B546133F5172882A1D25B000000008A473044022015EAE18F490FDB0C5780A655F87D6DA0EC57052A89E0461610D7262F69FFA6CC0220777A405C3552006D2BF41880F337AB01EDBB1D5BED0192ADB10B236920F9CC534141049602CA68608F9AB02DC2DA445C97F2D3980F75A5C620742C309BDD8B7E5A5B640FD0D5AF4A8168711728B672F2AE0675CFD4E7B67F7EC1E5C6F2EB4BD2E61782FFFFFFFF01FAB20C00000000001976A9142297636D6AF0116B6467DCF7C22DC2CAFBC3B3F188AC00000000",
            "010000000139BF05EAFF9C50853202AE70FE9D9630A1E05044C360103C3032DE7E95A3EC03000000008A47304402207151C04081E5C176659C2703C01D9B686D6EF5BAA251D1B4A2B4CD201526AFA30220356FE788113684C68BB7F87D19701287CF5B090AF4352D44075904E967856F584141040802CA060816C5596860EEB2C3237DBABFFC5A5EBD58F1B6EB48CE08E213DBA7069B638863C81EFF15FCE23183AD337D12E4D29A794652FC74436CDC09E92C17FFFFFFFF01A8AF0C00000000001976A914DCD60868FEF4F954146D2D38F7E29C12D4E0285788AC00000000",
            "01000000013B31924ADC40766F169B0DF4FFE5A5EED9A11A9694CDEFDE222E5B7D20DC1D83000000008A473044022055DFD8DC5123F8F5959905226B9C6124698D2547CD2984D64EB922B05EAEACC9022049C5C6CAD4B685943845369CB77076D5DF7E08C783CA438D0F50F3DF2AABA5194141043D2ECBDF951A12A565980884706C8ABC092954E8C9C36ECC9B3C9B6E9AAD6E3D9D01AAF3A19CFACB49B3496EC560BE39139A50693A7A30AFAFC6AC8C2EFD392DFFFFFFFF03A0860100000000001976A914CB7A79C58B7B69516F26FA1AF43B2F9F26D7378588ACA0860100000000001976A914D0577979B31D9BE29AE8B6298D6839184E09BD6588ACD8A00900000000001976A914DCD60868FEF4F954146D2D38F7E29C12D4E0285788AC00000000",
            "0100000001F34C4B822648CE8F242E063AC22F35B6D67243D6EB6B467DF9A4533F095364F1020000008B483045022100B76E2829432658057797EEF540717611CE1633CCF88BA28B254584F422F631CC0220326D199AFC20CC108DD027D0FBD987BE4E63468EE552162C9077EA06A0C1F3AE4141043D2ECBDF951A12A565980884706C8ABC092954E8C9C36ECC9B3C9B6E9AAD6E3D9D01AAF3A19CFACB49B3496EC560BE39139A50693A7A30AFAFC6AC8C2EFD392DFFFFFFFF0350C30000000000001976A914CB7A79C58B7B69516F26FA1AF43B2F9F26D7378588AC50C30000000000001976A914D0577979B31D9BE29AE8B6298D6839184E09BD6588ACA8180800000000001976A914DCD60868FEF4F954146D2D38F7E29C12D4E0285788AC00000000",
            "0100000001323DC2EB4B9470AB06089D42D0D15A92058D5BBADCE522F6FDA876DC3E123E8F000000008A47304402201DB0B2E61D96CFEAE1389FA9D02DEA9714D99D1DDF555119A45520A15F207126022016A053E632513F648E3DECE56FAC26060BBC62E13925800786B64E4D93BE2AF54141049602CA68608F9AB02DC2DA445C97F2D3980F75A5C620742C309BDD8B7E5A5B640FD0D5AF4A8168711728B672F2AE0675CFD4E7B67F7EC1E5C6F2EB4BD2E61782FFFFFFFF01D4B00C00000000001976A91487077F24A8AE86E2D76872486D1C820A87BB3EC788AC00000000",
            "0100000003E0CE648224790784CA3136697862965B328092D99231F16B3B37C2CED9790A72000000006A473044022025BFEFE18B5385F889962B7465A3FA6DE183CF67CA22169BBBFF2CB2C288C19D02202764BA6CACC89DC4CEEFBBBD272110C1C5179C1D41DB9E048BD48C4EF692AB1F4121025D45A8DB44EA091C7B34F85FBC81CB3B31DC8365DA7BAE1DF4D033FA4A32E57DFFFFFFFFE0847E09B594ADD7FEBBCCBDBB8DBA51DD6449116C1BF5191403240BA3847A51000000006A473044022006BF7D2A7B1399AA96D488669F7D0A7B4F5269AAE8142A4FE7E6CCDBE340A260022007E430C3D30DDB8B6F14A2998A1F538242BDDE5B6238B2054878BFD04006CF134121025D45A8DB44EA091C7B34F85FBC81CB3B31DC8365DA7BAE1DF4D033FA4A32E57DFFFFFFFFDCF0B7DF209ACDE230CDBC451E0B49993A1A9D8715E023B8C86067597E8138AD000000006A47304402206315FAA8226AAF027735AE5A921B55E480A92B64D68477FBDBF977369BC038B002203877B445BD644A51FD2EA7BE713F43DACF4B72F6564538CFFE42D35AD257BF014121025D45A8DB44EA091C7B34F85FBC81CB3B31DC8365DA7BAE1DF4D033FA4A32E57DFFFFFFFF01F4B30C00000000001976A914B3BE4593503F84E2BE61EB33670B31CC7F4FC0AE88AC00000000"
        };

        // TX: 120D771D0F11F35A0F5AA8BE3BB10A2607D869B824428022B416D3E89AB4D5F3:2=530600
        // TX: F16453093F53A4F97D466BEBD64372D6B6352FC23A062E248FCE4826824B4CF3:2=631000
        // TX: 03ECA3957EDE32303C1060C34450E0A130969DFE70AE023285509CFFEA05BF39:0=831700
        // TX: 8F3E123EDC76A8FDF622E5DCBA5B8D05925AD1D0429D0806AB70944BEBC23D32:0=832057
        // TX: 5BD2A1822817F53361543B42F07DA62549A1FD8A36CB69A60FD498E6EF5E5486:0=832500
        // TX: 9D83D7118AAB29E7AB68E9A31EA9ED15375A660D2BD15C39D57C92A000566CCC:0=832250
        // TX: 831DDC207D5B2E22DEEFCD94961AA1D9EEA5E5FFF40D9B166F7640DC4A92313B:0=831400

        final TransactionInflater transactionInflater = new TransactionInflater();

        final Wallet wallet = new Wallet();

        final String[] privateKeyHexStrings = new String[] {
            "19784ED2D6D8ABD959B55B682828510413B3F51023B2E28CA7E9556A065CE664",
            "BFE70A783DB6F0BEB821D9FACE85CCA9F997E6ABC77A17AE199A37AA3C2767D5",
            "01D16F62F788E9AF42048A55952DCA9C308D5A0D81236EA3B06970370DC1E5E8",
            "0AB2ACBE1D368DD3BDACF38DC5240C3BE6148D5ADE87DCA45ECE75C1420678E6",
            "036484F12F2DFE83C7BB2BB8815AF4DB30CE9F8DF87912546B51634FCDB3C501",
            "F56F7DBF8611DCA4D23253E1F832F8E5C9046C95E84BFF9048C56B69BF8B1988"
        };

        for (final String privateKeyString : privateKeyHexStrings) {
            final PrivateKey privateKey = PrivateKey.fromHexString(privateKeyString);
            wallet.addPrivateKey(privateKey);
        }

        for (final String transactionString : transactionHexStrings) {
            final Transaction transaction = transactionInflater.fromBytes(HexUtil.hexStringToByteArray(transactionString));
            wallet.addTransaction(transaction);
        }

        Assert.assertEquals(Long.valueOf(530600L), wallet.getBalance());
    }
}
